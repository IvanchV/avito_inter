// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/change_segment/{id}": {
            "put": {
                "description": "Ð¡hange users segments",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "ChangeUserSegment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Arrays of delete or add",
                        "name": "arrays",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ReqUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful",
                        "schema": {
                            "$ref": "#/definitions/handlers.ApiAnswer"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ApiError"
                        }
                    }
                }
            }
        },
        "/create_segment": {
            "post": {
                "description": "Create a new segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Segments"
                ],
                "summary": "CreateSegment",
                "parameters": [
                    {
                        "description": "Segment name",
                        "name": "segment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Segment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Segment created",
                        "schema": {
                            "$ref": "#/definitions/handlers.ApiAnswer"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ApiError"
                        }
                    }
                }
            }
        },
        "/delete_segment": {
            "delete": {
                "description": "Create a new segment",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Segments"
                ],
                "summary": "DeleteSegment",
                "parameters": [
                    {
                        "description": "Segment name",
                        "name": "segment",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Segment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Segment deleted",
                        "schema": {
                            "$ref": "#/definitions/handlers.ApiAnswer"
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "schema": {
                            "$ref": "#/definitions/handlers.ApiError"
                        }
                    }
                }
            }
        },
        "/user_segment/{id}": {
            "get": {
                "description": "Return all segments of user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "GetUserSegment",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User_id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return User segments",
                        "schema": {
                            "$ref": "#/definitions/models.ResUser"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/handlers.ApiError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "handlers.ApiAnswer": {
            "type": "object",
            "properties": {
                "ans": {
                    "type": "string"
                }
            }
        },
        "handlers.ApiError": {
            "type": "object",
            "properties": {
                "error": {
                    "type": "string"
                }
            }
        },
        "models.ReqUser": {
            "type": "object",
            "properties": {
                "add": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "delete": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.ResUser": {
            "type": "object",
            "properties": {
                "segments": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "models.Segment": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Avito Segments",
	Description:      "Api Server for Avito Segments",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
